################################################################################
# ~~~~~~~~~~~~~~~~~~~~~~~~  AUTOCREATED WITH KIAUH  ~~~~~~~~~~~~~~~~~~~~~~~~~~ #
################################################################################
# Recommended macros and config entries if you use Mainsail or Fluidd!         #
# You can edit or delete those macros if you already defined them elsewhere!   #
################################################################################

[gcode_macro PRINT_START]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
    # Use absolute coordinates
    G90
    # # Reset the G-Code Z offset (adjust Z offset if needed)
    # SET_GCODE_OFFSET Z=0
    # # Home the printer
    # G28
    # # Move the nozzle near the bed
    # # Set nozzle to reach temperature
    # M104 S{EXTRUDER_TEMP}
    # G1 Z5 F3000
    # # Wait for bed to reach temperature
    # M190 S{BED_TEMP}

    # # Prime line
    # G92 E0
    # G1 X-115 Y0 Z0.3
    # G3 F1000 E10 X-53 Y-71 I85 J0
    # G1 F3000 X-53 Y-71 Z5
    # G92 E0
  M83 ; extruder relative mode
  # M104 S{first_layer_temperature[initial_extruder]+extruder_temperature_offset[initial_extruder]} ; set extruder temp
  # M140 S[first_layer_bed_temperature] ; set bed temp
  # M190 S[first_layer_bed_temperature] ; wait for bed temp
  # M109 S{first_layer_temperature[initial_extruder]+extruder_temperature_offset[initial_extruder]} ; wait for extruder temp
  SET_GCODE_OFFSET Z=0
    # Home the printer
  G28
    # Move the nozzle near the bed
    # Set nozzle to reach temperature
  M104 S{EXTRUDER_TEMP}
  G1 Z5 F3000
    # Wait for bed to reach temperature
  M190 S{BED_TEMP}

  G1 X-54.672 Y95.203 Z0.3 F9000
  G92 E0.0
  G1 F1000
  G1 X-52.931 Y96.185 E0.320
  G1 X-50.985 Y97.231 E0.320
  G1 X-49.018 Y98.238 E0.320
  G1 X-47.032 Y99.205 E0.320
  G1 X-45.026 Y100.132 E0.320
  G1 X-43.003 Y101.019 E0.320
  G1 X-40.961 Y101.864 E0.320
  G1 X-38.904 Y102.668 E0.320
  G1 X-36.83 Y103.431 E0.320
  G1 X-34.742 Y104.152 E0.320
  G1 X-32.639 Y104.83 E0.320
  G1 X-30.523 Y105.466 E0.320
  G1 X-28.395 Y106.06 E0.320
  G1 X-26.255 Y106.61 E0.320
  G1 X-24.105 Y107.117 E0.320
  G1 X-21.945 Y107.581 E0.320
  G1 X-19.776 Y108.001 E0.320
  G1 X-17.599 Y108.377 E0.320
  G1 X-15.415 Y108.71 E0.320
  G1 X-13.224 Y108.998 E0.320
  G1 X-11.028 Y109.242 E0.320
  G1 X-8.828 Y109.442 E0.320
  G1 X-6.624 Y109.598 E0.320
  G1 X-4.418 Y109.709 E0.320
  G1 X-2.209 Y109.776 E0.320
  G1 X0 Y109.798 E0.320
  G1 X2.209 Y109.776 E0.580
  G1 X4.418 Y109.709 E0.580
  G1 X6.624 Y109.598 E0.580
  G1 X8.828 Y109.442 E0.580
  G1 X11.028 Y109.242 E0.580
  G1 X13.224 Y108.998 E0.580
  G1 X15.415 Y108.71 E0.580
  G1 X17.599 Y108.377 E0.580
  G1 X19.776 Y108.001 E0.580
  G1 X21.945 Y107.581 E0.580
  G1 X24.105 Y107.117 E0.580
  G1 X26.255 Y106.61 E0.580
  G1 X28.395 Y106.06 E0.580
  G1 X30.523 Y105.466 E0.580
  G1 X32.639 Y104.83 E0.580
  G1 X34.742 Y104.152 E0.580
  G1 X36.83 Y103.431 E0.580
  G1 X38.904 Y102.668 E0.580
  G1 X40.961 Y101.864 E0.580
  G1 X43.003 Y101.019 E0.580
  G1 X45.026 Y100.132 E0.580
  G1 X47.032 Y99.205 E0.580
  G1 X49.018 Y98.238 E0.580
  G1 X50.985 Y97.231 E0.580
  G1 X52.931 Y96.185 E0.500
  G1 X54.672 Y95.203 E0.500
  G92 E0.0
  G1 E-5 F3000 ; retract 5mm
  G1 X52.931 Y96.185 F1000 ; wipe
  G1 X50.985 Y97.231 F1000 ; wipe
  G1 X49.018 Y98.238 F1000 ; wipe
  G1 X0 Y109.798 F1000
  G1 E4.8 F1500; de-retract
  G92 E0.0 ; reset extrusion distance
  # M221 S{if layer_height<0.075}100{else}95{endif}

[gcode_macro PRINT_END]
gcode:
    G28
   #  Turn off bed, extruder, and fan
    TURN_OFF_HEATERS
    M106 S0
    # Move nozzle away from print while retracting
    G91
    G1 Z-20 F3000
    G1 X-2 Y-2 E-3 F300
    G90
    # Disable steppers
     M84
    #Reset file
    UPDATE_DELAYED_GCODE ID=_DELAY_SDCARD_RESET_FILE DURATION=10

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    G28
    # TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 50.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 30.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %} 
    
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}

[gcode_macro M115]
description: Print host and mcu version
rename_existing: M115.1
gcode:
  {% set parameters = namespace(output = 'mcu build version: \n') %}
  {% for name1 in printer %}
    {% for name2 in printer[name1] %}
      {% set show = ['mcu_version'] %}
      {% if name2 is in show %}
        {% set param = "%s: %s" % (name1, printer[name1][name2]) %}
        {% set parameters.output = parameters.output +  param + "\n" %}
      {% endif %}
    {% endfor %}
  {% endfor %}
  {action_respond_info(parameters.output)}
  M115.1

[gcode_macro FILAMENT_LOAD]
description: Load filament and disable rounout while running
gcode:
    M109 S230
    M83                  ; set extruder to relative
    G1 E70 F1800     ; quickly load 90mm filament
    G1 E50 F300   ; slower extrusion for hotend path
    G1 E-2 F1000 ; retract 

[gcode_macro FILAMENT_UNLOAD]
description: Unload filament and disable rounout while running
gcode:
    M109 S230
    M83 ; Relative extrusion
    G1 E-80 F3000
    M109 S0

[delayed_gcode _DELAY_SDCARD_RESET_FILE]
gcode:
  SDCARD_RESET_FILE

################################################################################
################################################################################
[virtual_sdcard]
path: /home/klipper/gcode_files

[pause_resume]

[display_status]

[gcode_macro SPEEDTEST]
gcode:
    {% set fmin = params.FMIN|default(100)|float * 60 %}
    {% set fmax = params.FMAX|default(200)|float * 60 %}
    {% set steps = params.STEPS|default(10)|int %}
    {% set cycles = params.CYCLES|default(1)|int %}

    {% set inset = params.INSET|default(20)|float %}

    {% set deltaRadius = printer.configfile.settings.printer.print_radius|float - inset %}

    {% set minX = -(deltaRadius * 1.41)/2 %}
    {% set maxX = (deltaRadius * 1.41)/2 %}
    {% set minY = -(deltaRadius * 1.41)/2 %}
    {% set maxY = (deltaRadius * 1.41)/2 %}

    # {% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}
    # {% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}
    # {% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}
    # {% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}
    
    SAVE_GCODE_STATE NAME=speedtest_state
    G90
        {% for INTERVAL in range(steps) %}
            {% for REPEAT in range(cycles) %}
                {% if fmin == fmax %}
                    {% set feedrate = fmin %}
                {% else %}
                    {% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}
                {% endif %}
                M400 # Wait for queue to empty
                M117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}
                M118 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}
                G1 F{feedrate} # set feedrate for the round
                G1 X{minX} Y{minY} # front left
                G1 X{minX} Y{minY + (maxY-minY)/2} # mid left
                G1 X{maxX} Y{minY + (maxY-minY)/2} # mid right
                G1 X{minX} Y{minY + (maxY-minY)/2} # mid left
                G1 X{minX} Y{minY} # front left
                G1 X{maxX} Y{maxY} # back right
                G1 X{maxX} Y{minY} # front right
                G1 X{minX} Y{maxY} # back left
                G1 X{minX} Y{minY + (maxY-minY)/2} # center left for circle start
                # G2 I{(maxY-minY)/2}  J0 #circle move cw
                # G3 I{(maxY-minY)/2}  J0 #circle move cсw
            {% endfor %}
        {% endfor %}
    M117
    # park_toolhead
    RESTORE_GCODE_STATE NAME=speedtest_state
