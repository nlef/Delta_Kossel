[virtual_sdcard]
path: /home/klipper/gcode_files

[pause_resume]

[display_status]

#  macro that run at klipper start
[delayed_gcode _INIT]
initial_duration: 1
gcode:
  _USER_VARIABLE

[gcode_macro _USER_VARIABLE]
description: Helper: Contains User defined printer variables
variable_extrude_lenght: 2
gcode:
    M117 lala

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    {% set E = printer["gcode_macro _USER_VARIABLE"].extrude_lenght|float %}
    {% set x_park = 0 %}
    {% set y_park = 0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    
    TURN_OFF_HEATERS
    M107 ; turn off fan
    
    {% if act_z < (max_z - 20.0) %}
        {% set z_safe = 5.0 %}
        {% set park = True %}
    {% else %}
        {% set z_safe = max_z - act_z %}
        {% set park = False %}
    {% endif %}

    G91
    G1 E-{E} F2100
    G1 Z{z_safe} F600    
    G90
    G0 X{x_park} Y{y_park} F6000
    {% if park %}
      G28
    {% endif %}
    M84 X Y E ; disable motors
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    {% set E = printer["gcode_macro _USER_VARIABLE"].extrude_lenght|float %}
    {% set x_park = 0.0 %}
    {% set y_park = 0.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 10.0) %}
        {% set z_safe = 5.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}

    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %} 
    G90
    
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    {% set E = printer["gcode_macro _USER_VARIABLE"].extrude_lenght|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}

[gcode_macro M115]
description: Print host and mcu version
rename_existing: M115.1
gcode:
  {% set parameters = namespace(output = 'mcu build version: \n') %}
  {% for name1 in printer %}
    {% for name2 in printer[name1] %}
      {% set show = ['mcu_version'] %}
      {% if name2 is in show %}
        {% set param = "%s: %s" % (name1, printer[name1][name2]) %}
        {% set parameters.output = parameters.output +  param + "\n" %}
      {% endif %}
    {% endfor %}
  {% endfor %}
  {action_respond_info(parameters.output)}
  M115.1


[delayed_gcode _DELAY_SDCARD_RESET_FILE]
gcode:
  SDCARD_RESET_FILE

################################################################################
################################################################################


[gcode_macro SPEEDTEST]
gcode:
    {% set fmin = params.FMIN|default(100)|float * 60 %}
    {% set fmax = params.FMAX|default(200)|float * 60 %}
    {% set steps = params.STEPS|default(10)|int %}
    {% set cycles = params.CYCLES|default(1)|int %}

    {% set inset = params.INSET|default(20)|float %}

    {% set deltaRadius = printer.configfile.settings.printer.print_radius|float - inset %}

    {% set minX = -(deltaRadius * 1.41)/2 %}
    {% set maxX = (deltaRadius * 1.41)/2 %}
    {% set minY = -(deltaRadius * 1.41)/2 %}
    {% set maxY = (deltaRadius * 1.41)/2 %}
    
    SAVE_GCODE_STATE NAME=speedtest_state
    G90
        {% for INTERVAL in range(steps) %}
            {% for REPEAT in range(cycles) %}
                {% if fmin == fmax %}
                    {% set feedrate = fmin %}
                {% else %}
                    {% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}
                {% endif %}
                M400 # Wait for queue to empty
                M117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}
                M118 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}
                G1 F{feedrate} # set feedrate for the round
                G1 X{minX} Y{minY} # front left
                G1 X{minX} Y{minY + (maxY-minY)/2} # mid left
                G1 X{maxX} Y{minY + (maxY-minY)/2} # mid right
                G1 X{minX} Y{minY + (maxY-minY)/2} # mid left
                G1 X{minX} Y{minY} # front left
                G1 X{maxX} Y{maxY} # back right
                G1 X{maxX} Y{minY} # front right
                G1 X{minX} Y{maxY} # back left
                G1 X{minX} Y{minY + (maxY-minY)/2} # center left for circle start
                # G2 I{(maxY-minY)/2}  J0 #circle move cw
                # G3 I{(maxY-minY)/2}  J0 #circle move cсw
            {% endfor %}
        {% endfor %}
    M117
    # park_toolhead
    RESTORE_GCODE_STATE NAME=speedtest_state



[gcode_macro START_PRINT]
variable_ext_temp: 200
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(80)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(210)|int %}
    {% set x_park = 0 %}
    {% set y_park = printer.configfile.settings.printer.print_radius|float - 10 %}
    {% set z_park = printer.toolhead.axis_minimum.z + 30 %}

    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=ext_temp VALUE={EXTRUDER_TEMP}
    # Start bed heating
    M140 S{BED_TEMP}
    M117 Heating bed
    # Home the printer
    G28
    {% set extrTemp = printer.configfile.settings.extruder.min_extrude_temp|int + 20 %}
    {% if printer.extruder.can_extrude|lower == 'false' %}
      M109 S{extrTemp} ; heat extruder and wait
    {% else %}
      M104 S{extrTemp}
    {% endif %}
    # Use absolute coordinates
    G90
    # Reset the G-Code Z offset (adjust Z offset if needed)
    SET_GCODE_OFFSET Z=0
    # Move the nozzle out of the bed
    G1 X{x_park} Y{y_park} Z{z_park} F3000
    # Move the nozzle down
    #G1 Z0 F120
    M190 S{BED_TEMP}
    _WAIT_PWM

[gcode_macro _PRINT_START]
gcode:
    #CLEAN_NOZZLE
    # Todo:
    M117 Heating extruder
    {% set ext_temp = printer["gcode_macro START_PRINT"].ext_temp %}
    M104 S{ext_temp}
    M109 S{ext_temp}
    _PRIME_LINE
    M117 Printing

[gcode_macro PRINT_END]
gcode:
    {% set E = printer["gcode_macro _USER_VARIABLE"].extrude_lenght|float %}
    {% set x_park = 0 %}
    {% set y_park = 0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 10.0) %}
        {% set z_safe = 5.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}

    G91
    G1 E-{E} F2100
    G1 Z{z_safe} F600    
    G90
    G0 X{x_park} Y{y_park} F6000
    TURN_OFF_HEATERS
    M107 ; turn off fan
    M84 X Y E ; disable motors
    #Reset file
    UPDATE_DELAYED_GCODE ID=_DELAY_SDCARD_RESET_FILE DURATION=10


[gcode_macro _WAIT_PWM]
variable_pwm: 0.35
variable_first: 'true'
gcode:
  # first execution?
  {% set S = params.S|default(0.5)|float %}
  {% if printer["gcode_macro _WAIT_PWM"].first == 'true'%}
    {% if printer['heater_bed'].power|float > S|float %}
      # store variables
      SET_GCODE_VARIABLE MACRO=_WAIT_PWM VARIABLE=first VALUE='"false"'
      SET_GCODE_VARIABLE MACRO=_WAIT_PWM VARIABLE=pwm VALUE={S|float}
      # execute wait
      PAUSE_BASE
      UPDATE_DELAYED_GCODE ID=_DELAY_PWM DURATION=1
	  {% else %}
      _PRINT_START
    {% endif %}
  {% else %}
    # done
    SET_GCODE_VARIABLE MACRO=_WAIT_PWM VARIABLE=first VALUE='"true"'
    RESUME_BASE
    _PRINT_START
  {% endif %}

[delayed_gcode _DELAY_PWM]
gcode:
  # only done to increase readability
  {% set pwm = printer["gcode_macro _WAIT_PWM"].pwm %}
  {% set act = printer['heater_bed'].power %}
  # check what to do
  {% if act|float > pwm|float %}
    UPDATE_DELAYED_GCODE ID=_DELAY_PWM DURATION=1
  {% else %}
    _WAIT_PWM
  {% endif %}


[gcode_macro _PRIME_LINE]
gcode:
    {% set prime_radius = printer.configfile.settings.printer.print_radius|float - 15 %}
    # hexagon
    {% set polygon_side = 2 * prime_radius * 0.5 %}
    {% set x_pos = (polygon_side/2) %}
    {% set y_pos = (prime_radius**2 - (polygon_side/2)**2)**0.5 %}
    
    {% set prime_height = 0.24 %}
    {% set prime_line_lenght = 2*3.14*prime_radius/6 %}
    {% set prime_volume = prime_height * prime_line_lenght * 0.5 * 1.4 %}
    {% set extrude_lenght = prime_volume / (3.14 *((1.75**2)/4)) %}
    
    M118 X {x_pos} Y {y_pos} E {extrude_lenght}
    ;SAVE_GCODE_STATE NAME=STATE_PRIME_LINE
    M117 Prime Line
    G90                                    ; absolute positioning
    M83                                    ; extruder relative mode
    G1 X-{x_pos} Y{y_pos} F900                       ; move with extrusion to line start
    G1 Z{prime_height} F240                          ; move Z Axis
    
    G92 E0
    G1 E2 F1200
    G2 X{x_pos} Y{y_pos} I{x_pos} J-{y_pos} E{extrude_lenght} F900 #line circle move cw
    G92 E0
    G3 X-{x_pos} Y{y_pos} I-{x_pos} J-{y_pos} E{extrude_lenght} F900 #line circle move cсw
    G92 E0
    
    G91
    # wipe
    G1 X2 Y2 F900
    G1 Z1 F1200
    G90                                    ; absolute positioning
    ;RESTORE_GCODE_STATE NAME=STATE_PRIME_LINE


[gcode_macro FILAMENT_LOAD]
description: Load filament and disable rounout while running
gcode:
  ##### get user defines #####
  {% set pre_load = 30 %}
  
  {% set minTemp = params.MINTMP|default(230)|float %}
  {% set load = params.LOAD|default(50)|int %}
  {% set extrude = params.EXTRUDE|default(80)|int %}
  {% set retreact = 2 %}
  {% set purge_x = printer.toolhead.axis_minimum.x|float + 1.0 %}
  {% set purge_y = printer.toolhead.axis_minimum.y|float + 1.0 %}
  {% set purge_z = printer.toolhead.axis_minimum.z + 0.5%}
  ##### store extruder temps #####
  {% set extruder_target = printer.extruder.target %}
  ##### end of definitions #####
  {% if printer.idle_timeout.state != "Printing" or printer.pause_resume.is_paused|lower == "true" %}
    SAVE_GCODE_STATE NAME=STATE_LOAD_FILAMENT
    {% if printer.extruder.temperature < minTemp  %}
      {action_respond_info("Extruder Temp to low, heat to %2dC" % minTemp)}
      M109 S{minTemp} ; heat extruder and wait
    {% else %}
      M104 S{minTemp} ; heat extruder
    {% endif %}
    # Load a bit to put filament in gear
    M83
    G1 E{pre_load} F600
    ## Move to waste bin
    M104 S{minTemp}
    G28                            ; home
    G90                            ; absolute positioning
    G1 X{purge_x} Y{purge_y} F1800 ; move to purge bucket location    
    G1 Z{purge_z} F240            ; move head to minimum
    G1 E{load} F600     ; quickly load 90mm filament
    G1 E{extrude} F300   ; slower extrusion for hotend path
    G1 E{retreact} F800 ; retract 
    # restore old extruder temperature
    M109 S{extruder_target}
    M117 Filament loaded
    RESTORE_GCODE_STATE NAME=STATE_LOAD_FILAMENT
  {% else %}
    M117 Filament loading disabled while printing!
  {% endif %}
 
[gcode_macro FILAMENT_UNLOAD]
description: Unload filament and disable runout while running
gcode:
  ##### get user defines #####
  {% set minTemp = params.MINTMP|default(230)|float %}
  {% set unload = params.UNLOAD|default(80)|int %}
  ##### store extruder temps #####
  {% set extruder_target = printer.extruder.target %}
  ##### end of definitions #####
  {% if printer.idle_timeout.state != "Printing" or printer.pause_resume.is_paused|lower == "true" %}
    SAVE_GCODE_STATE NAME=STATE_UNLOAD_FILAMENT
    {% if printer.extruder.temperature < minTemp  %}
      {action_respond_info("Extruder Temp to low, heat to %2dC" % minTemp)}
      M109 S{minTemp} ; heat extruder and wait
    {% else %}
      M104 S{minTemp} ; heat extruder
    {% endif %}
    # Ball up the filament tip and retract out past the extruder gears
    #_FILAMENT_BALL WAIT=3
    M83 ; Relative extrusion
    G1 E-{unload} F900
    M400
    # restore old extruder temperature
    M109 S{extruder_target}
    M117 Filament unloaded
    RESTORE_GCODE_STATE NAME=STATE_UNLOAD_FILAMENT
  {% else %}
    M117 Filament unloading disabled while printing!
  {% endif %}